// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model users{
  id  Int @default(autoincrement()) @id
  email String @unique
  first_name String
  last_name String
  country_number String @db.VarChar(25)
  state_number String 
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())
  auth auths []
  article articles[]
}


model auths{
  id Int @default(autoincrement()) @id
  password String
  user users @relation(fields: [user_id], references: [id])
  user_id Int @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())
}

model articles{
  id Int @default(autoincrement()) @id
  title String @db.VarChar(25)
  content String
  author users @relation(fields: [author_id], references: [id])
  author_id Int @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())
  images images[]
  article_tag articles_tags[]
}

model images {
  id Int @default(autoincrement()) @id
  article articles @relation(fields: [article_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())
  article_id Int
}



model tags{
  id Int @default(autoincrement()) @id
  name String @db.VarChar(50)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())
  article_tag articles_tags[]
}


model articles_tags{
  id Int @default(autoincrement()) @id
  article  articles @relation(fields: [article_id], references: [id])
  article_id Int
  tag tags @relation(fields: [tag_id], references: [id])
  tag_id Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())
}

model plans {
  id Int @default(autoincrement()) @id
  name String @db.VarChar(50)
  description String
  monthly_payment Float @db.DoublePrecision
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())

  payment payment[]
}



model payment{
  id Int @default(autoincrement()) @id
  plans plans @relation(fields: [plan_type_id], references: [id])
  plan_type_id Int 
  payed Boolean @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())
}







